#protocolLibraryItems .taskItem {

  // Layout of taskItem children
  display: flex;
  flex-wrap: wrap;
  height: 3rem;
  width: 100%;

  input[type="text"] {
    flex: 1 auto;
    padding-right: 20px;
  }
  // input:after{
  //   background-image: -webkit-linear-gradient(right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
  //   background-image: -moz-linear-gradient(right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
  //   background-image: -ms-linear-gradient(right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
  //   background-image: -o-linear-gradient(right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
  //   background-image: linear-gradient(to left, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
  // }
  #actionIcons {
    display: inline-block;
    position: relative;
    margin-left: 10px;
    margin-right: 10px;
  }
  .actionIcon {
    flex: 0 0 40px;
    padding-top: 6px;
    cursor: pointer;
    display: inline-block;
    position: relative;
    vertical-align: middle;
    width: 40px;
    margin-top: 10px;
    margin-bottom: 10px;
    text-align:center;
  }
  .dataSpan {
    padding-top: 6px;
    cursor: pointer;
    display: inline-block;
    position: relative;
    vertical-align: middle;
    margin-top: 10px;
    margin-bottom: 10px;
    text-align:center;
    margin-right: 10px;
  }
  .createdAt{
    min-width: 100px;
  }

  .delete-item {
    flex: 0 0 3rem;
  }

  @media screen and (max-width: 768px) {
    .hiddenOnPortrait{
      display: none;
    }
  }
  @media screen and (max-width: 1043px) {
    .hiddenOnLandscape{
      display: none;
    }
  }

  // Style of taskItem children
  input[type="text"] {
    background: transparent;
    cursor: pointer;

    &:focus { cursor: text; }
  }

  .delete-item {
    color: gray;
    line-height: 3rem;
    text-align: center;

    &:hover,
    &:active {
      color:gray;
    }
    .icon-trash { font-size: 1.1em; }
  }


  // Border between list items
  & + .taskItem { border-top: 1px solid #f0f9fb; }

  // Checked
  &.checked {
    text-decoration: line-through;

    input[type="text"] {
      text-decoration: line-through;
    }

    .delete-item { display: inline-block; }
  }

  // Editing
  .delete-item { display: none; }
  &.editing .delete-item { display: inline-block; }
}
